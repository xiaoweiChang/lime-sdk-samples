platform :ios, '14.0'
install! 'cocoapods', :disable_input_output_paths => true
# ignore all warnings from all pods
inhibit_all_warnings!
use_modular_headers!

source 'https://github.com/VIPAAR/Specs.git'
source 'https://github.com/CocoaPods/Specs.git'

target 'SampleObjC' do
  pod 'HLSDK-Local', :path => '/Users/xiaoweichang/Documents/WorkSpace/IOSSDK-review/HLSDKDev'
  #pod 'HLSDK', '16.4.2'
  #Override the deployment targets of all pods
  post_install do |installer|
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
        
        # Disable swift module interface verification due to a swift bug of Xcode 14.3
        # https://vipaar.atlassian.net/browse/IOS-2992
        # https://github.com/apple/swift/issues/64669
        swift_flags = "-no-verify-emitted-module-interface"
        # Load the existing xcconfig file
        xcconfig_path = config.base_configuration_reference.real_path
        xcconfig = File.read(xcconfig_path)

        # Find and replace the OTHER_SWIFT_FLAGS line, or add it if it doesn't exist
        if xcconfig.match(/^OTHER_SWIFT_FLAGS/)
            xcconfig.gsub!(/^(OTHER_SWIFT_FLAGS\s*=.*)$/, '\1 ' + swift_flags)
        else
            xcconfig << "\nOTHER_SWIFT_FLAGS = $(inherited) #{swift_flags}"
        end

        # Write the updated xcconfig file
        File.write(xcconfig_path, xcconfig)
      end
    end
  end
end

# Fix Xcode 14 warnings like:
# warning: Run script build phase '[CP] Copy XCFrameworks' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking "Based on dependency analysis" in the script phase. (in target 'ATargetNameHere' from project 'YourProjectName')
# Ref.: https://github.com/CocoaPods/CocoaPods/issues/11444
post_integrate do |installer|
  main_project = installer.aggregate_targets[0].user_project
  pods_project = installer.pods_project
  targets = main_project.targets + pods_project.targets
  targets.each do |target|
    run_script_build_phases = target.build_phases.filter { |phase| phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase) }
    cocoapods_run_script_build_phases = run_script_build_phases.filter { |phase| phase.name.start_with?("[CP") }
    cocoapods_run_script_build_phases.each do |run_script|
      next unless (run_script.input_paths || []).empty? && (run_script.output_paths || []).empty?
      run_script.always_out_of_date = "1"
    end
  end
  main_project.save
  pods_project.save
end



